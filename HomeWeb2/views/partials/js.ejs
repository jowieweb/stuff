	<script src="Chart.bundle.min.js"></script>
	<script type="text/javascript" src="loader.js"></script>
	<script type="text/javascript" src="reconnecting-websocket.js"> </script>
	<script>
	google.charts.load('current', {packages: ['corechart', 'line']});
	var backendip = (window.location.host  + window.location.pathname);
	var activePage = 0; 
	var wsID = 0;
	var serverTimeZoneOffset = <%=  new Date().getTimezoneOffset()*60; %>;
	var clientTimeZoneOffset = new Date().getTimezoneOffset()*60;
	
	var timeZoneOffset =0;
	<% var index = 0; %>
	var topIDs = [ <% trons.forEach(function(value, key) { %>
						{id:"<%= key %>", index : <%= index++ %>},
				<% }, trons); %>
				];
	
	function onOpen(){
		//alert("OPEN!");
	}
	
	function onMessage(event){
		var obj = JSON.parse(event.data);
		if(obj.type == "id"){
			 wsID = obj.id;
		} else if(obj.type == "Button"){
			handleButton(obj);
		} else if(obj.type == "Sensor"){
			handleSensor(obj);
		} else if (obj.type == "Slider"){
			handleSlider(obj);
		} else if (obj.type == "Chart"){
			
			var chart = document.getElementById("chart_div")
			chart.style.display = "block";
			//testChart(obj.data);
			drawBasic(obj.data);
		}
		
		//$(obj.id).html = obj.message;
		//ws.send("ws foo");
	}
	function handleSlider(obj){
		var text = document.getElementById(obj.id + "-sensor");
		var slider = document.getElementById(obj.id + "-slider");
		if(text != null){
			if(obj.isAnswer == true){
				text.innerHTML = obj.message;
				slider.value = obj.message;
			}
		}
		
	}
	
	function handleSensor(obj){
		var sensor = document.getElementById(obj.id + "-sensor");
		
		if(sensor != null){
			sensor.innerHTML = obj.message;
		}
	}
	
	function handleButton(obj){
		var button = document.getElementById(obj.id + "-switch");
		
		
		if(button != null){
			if(obj.message == 1){
				button.checked = true;
			}else {
				button.checked = false;
			}
			
		}
		
		if(obj.isAnswer == true && obj.type == "Button"){
			if(obj.message == 1){
				document.getElementById('img-id-' + obj.id).src = "/power_on.png";
			} else {
				document.getElementById('img-id-' + obj.id).src = "/power_off.png";
			}
			
		}
	}
	function connectWS(){
		//alert(backendip);
		ws = new ReconnectingWebSocket("ws://" + backendip + ":8081");
		ws.onopen = onOpen;
		ws.onmessage = onMessage;
		
		//alert("working");
	}
	
	function buttonClick(id){
		var obj = document.getElementById(id);
		var tosend = {id:id, state:0};
		if(obj.innerHTML == '1'){
			tosend.state = 0;
		} else {
			tosend.state = 1;
		}
		
		//alert(JSON.stringify(tosend));
		ws.send(JSON.stringify(tosend));
	}
	
	function blub(obj){
		var id = obj.id.substring(0, obj.id.indexOf("-"));
		var tosend = {id:id, state:0};
		if(obj.checked == '1'){
			tosend.state = 1;
		} else {
			tosend.state = 0;
		}
		
		//alert(JSON.stringify(tosend));
		ws.send(JSON.stringify(tosend));
	}
	
	function volUp(obj){
		var id = obj.id.substring(0, obj.id.indexOf("-"));
		var tosend = {id:id, state:1};
		ws.send(JSON.stringify(tosend));
	}
	
	function volDown(obj){
		var id = obj.id.substring(0, obj.id.indexOf("-"));
		var tosend = {id:id, state:-1};
		ws.send(JSON.stringify(tosend));
	}
	
	function getChart(obj){
		var id = obj.id.substring(0, obj.id.indexOf("-"));
		var tosend = {type:'chart', id:id, wsID:wsID};
		ws.send(JSON.stringify(tosend));
		
	
	}
	
	
	function tabClick(obj){

		for (var index = 0; index < topIDs.length; index++) {
			
			if( topIDs[index].id == obj.innerText){
				var test = document.getElementById(obj.innerText);
				test.style.display = "block";
				activePage = topIDs[index].index;
				document.getElementById(topIDs[index].id+"-header").style.textDecoration = "underline"; 
			} else {
				var docObj =  document.getElementById(topIDs[index].id);
				docObj.style.display = 'none';
				document.getElementById(topIDs[index].id+"-header").style.textDecoration = ""; 
				
			}
		}
	}
	
	function selectTab(tab){
	//alert(tab.index);
		for (var index = 0; index < topIDs.length; index++) {
		//alert("st " + topIDs[index].index );
			if(topIDs[index].index == tab.index){
				var test = document.getElementById(tab.id);
				test.style.display = "block";
				document.getElementById(topIDs[index].id+"-header").style.textDecoration = "underline"; 
			} else {
				var docObj =  document.getElementById(topIDs[index].id);
				docObj.style.display = 'none';
				document.getElementById(topIDs[index].id+"-header").style.textDecoration = ""; 
			}
		}		
	}	
	
	document.addEventListener('touchstart', handleTouchStart, false);        
	document.addEventListener('touchmove', handleTouchMove, false);

	var xDown = null;                                                        
	var yDown = null;                                                        

	function handleTouchStart(evt) {      	
		xDown = evt.touches[0].clientX;                                      
		yDown = evt.touches[0].clientY;                                      
	};                                                

	function handleTouchMove(evt) {
		if ( ! xDown || ! yDown ) {
			return;
		}

		var xUp = evt.touches[0].clientX;                                    
		var yUp = evt.touches[0].clientY;

		var xDiff = xDown - xUp;
		var yDiff = yDown - yUp;

		if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/
			
			if(navOpened){
				xDown = null;
				yDown = null; 
				closeNav();
				return;
			}
			
			if ( xDiff > 0 ) {
				/* left swipe */ 
				
				if(activePage == topIDs.length)
					activePage = 0;
				else
					activePage++;
				
				
			} else {
				/* right swipe */
				
				if(activePage == 0)
					activePage = topIDs.length -1;
				else
					activePage--;
			}  
			xDown = null;
			yDown = null;     
			selectTab(topIDs[activePage])                     
		} else {
			if ( yDiff > 0 ) {
				/* up swipe */ 
			} else { 
				/* down swipe */
			}                                                                 
		}
		/* reset values */
		xDown = null;
		yDown = null;                                             
	};
	var navOpened =false;
	function openNav() {
		document.getElementById("mySidenav").style.width = "250px";
		navOpened= true;
	}

	function closeNav() {
		document.getElementById("mySidenav").style.width = "0";
		navOpened= false;
	}

	
	
	
	$(document).ready(function() {	
				if(serverTimeZoneOffset != clientTimeZoneOffset){
					timeZoneOffset = (serverTimeZoneOffset - clientTimeZoneOffset)*1000; 
				}
				backendip = backendip.substring(0, backendip.indexOf(":"));
				selectTab(topIDs[0]);
				connectWS();			
		$("#btn").click( 
			function()
			{
				ws.send("blah");
			}
		);				
	});
	
	function drawBasic(obj) {

	
		var data = new google.visualization.DataTable();
		
		var name = obj[0].titel;
		data.addColumn('datetime', 'X');
		data.addColumn('number', name);

		for (var index =  0; index < obj.length; index++) {
			var type = obj[index].type;
			if(type == "SensorBinary" || type == "Button"){
				
					
					
					if(obj[index].value == "1"){
						var tDate = new Date((obj[index].time) *1000 - timeZoneOffset);
						data.addRow([tDate ,parseFloat(0)]);
					} else if(obj[index].value == "0"){
						var tDate = new Date((obj[index].time) *1000 - timeZoneOffset);
						data.addRow([tDate ,parseFloat(1)]); 
					}
						
					
			}
				
			
			var date = new Date(obj[index].time *1000 - timeZoneOffset);

			data.addRow([
					 date ,
					parseFloat(obj[index].value) ]);
		}

		var options = {
			explorer : {
				maxZoomOut : 2,
				keepInBounds : false
			},
			legend: { position: 'bottom' },
			chartArea: {width: '80%', height: '80%'}

		};

		var das = document.getElementById('chart_div');
		var chart = new google.visualization.LineChart(das);
		das.style.display='block';
		chart.draw(data, options);
	}
	
	
	function testChart(fromWS){
	
		var speedCanvas = document.getElementById("speedChart");

		Chart.defaults.global.defaultFontFamily = "Lato";
		Chart.defaults.global.defaultFontSize = 18;
		var x = [];
		var y =[];
		for (var index = 0; index < fromWS.length; index++) {
			var time = fromWS[index].time;
			x.push(time.substring(0,time.indexOf(".")));
			y.push(fromWS[index].value);
		}
		var speedData = {
		  labels: x,
		  datasets: [{
			label: "",
			data: y,
			lineTension: 0.3,
			fill: false,
			borderColor: '#03A9F4',
			backgroundColor: 'transparent',
			pointBorderColor: '#03A9F4',
			pointBackgroundColor: '#03A9F4',
			pointRadius: 5,
			pointHoverRadius: 15,
			pointHitRadius: 30,
			pointBorderWidth: 2
		  }]
		};

		var chartOptions = {
		  legend: {
			display: true,
			position: 'top',
			labels: {
			  boxWidth: 80,
			  fontColor: 'black'
			}
		  }
		};

		var lineChart = new Chart(speedCanvas, {
		  type: 'line',
		  data: speedData,
		  options: chartOptions
		});
	
	}
	
	
	</script>